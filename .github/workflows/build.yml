name: Build Electron App

on:
  workflow_dispatch: # manual trigger

jobs:
  windows:
    name: Build Windows
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [x64, arm64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '20'
      - run: npm ci
      - run: npm run build
      - run: npx electron-builder --win --${{ matrix.arch }}
        env:
          CSC_LINK: ${{ secrets.CSC_LINK || '' }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD || '' }}
      - uses: actions/upload-artifact@v4
        with:
          name: windows-${{ matrix.arch }}
          path: release/

  linux:
    name: Build Linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x64, arm64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '20'
      - run: npm ci
      - run: npm run build
      - run: npx electron-builder --linux --${{ matrix.arch }}
      - uses: actions/upload-artifact@v4
        with:
          name: linux-${{ matrix.arch }}
          path: release/

  macos:
    name: Build macOS
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [x64, arm64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '20'
      - run: npm ci
      - run: npm run build
      - run: npx electron-builder --mac --${{ matrix.arch }}
        env:
          CSC_LINK: ${{ secrets.CSC_LINK || '' }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD || '' }}
      - uses: actions/upload-artifact@v4
        with:
          name: macos-${{ matrix.arch }}
          path: release/

  release:
      name: Create GitHub Release
      runs-on: ubuntu-latest
      needs: [windows, linux, macos]
      steps:
        - uses: actions/checkout@v3
  
        - name: Download Windows artifacts
          uses: actions/download-artifact@v4
          with:
            name: windows-x64
            path: release/windows/x64
        - uses: actions/download-artifact@v4
          with:
            name: windows-arm64
            path: release/windows/arm64
  
        - name: Download Linux artifacts
          uses: actions/download-artifact@v4
          with:
            name: linux-x64
            path: release/linux/x64
        - uses: actions/download-artifact@v4
          with:
            name: linux-arm64
            path: release/linux/arm64
  
        - name: Download macOS artifacts
          uses: actions/download-artifact@v4
          with:
            name: macos-x64
            path: release/macos/x64
        - uses: actions/download-artifact@v4
          with:
            name: macos-arm64
            path: release/macos/arm64
  
        - name: Create GitHub Release
          uses: ncipollo/release-action@v1
          with:
            token: ${{ secrets.GH_TOKEN }}
            name: Release ${{ github.run_number }}
            tag: release-${{ github.run_number }}
            files: |
              release/**/*
  
